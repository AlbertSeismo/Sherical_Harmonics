[




{
"title": "BAtoHilm (Fortran)",
"url": "batohilm.html",
"summary": ""
}
,



{
"title": "BAtoHilmRhoH (Fortran)",
"url": "batohilmrhoh.html",
"summary": ""
}
,



{
"title": "CilmMinus (Fortran)",
"url": "cilmminus.html",
"summary": ""
}
,



{
"title": "CilmMinusRhoH (Fortran)",
"url": "cilmminusrhoh.html",
"summary": ""
}
,



{
"title": "CilmPlus (Fortran)",
"url": "cilmplus.html",
"summary": ""
}
,



{
"title": "CilmPlusRhoH (Fortran)",
"url": "cilmplusrhoh.html",
"summary": ""
}
,



{
"title": "Complex spherical harmonics",
"url": "complex-spherical-harmonics.html",
"summary": "SHTOOLS uses by default 4&pi;-normalized spherical harmonic functions that exclude the Condon-Shortley phase factor. Schmidt semi-normalized, orthonormalized, and unnormalized harmonics can be employed in most routines by specifying optional parameters."
}
,



{
"title": "ComputeDG82 (Fortran)",
"url": "computedg82.html",
"summary": ""
}
,



{
"title": "ComputeDM (Fortran)",
"url": "computedm.html",
"summary": ""
}
,



{
"title": "ComputeDMap (Fortran)",
"url": "computedmap.html",
"summary": ""
}
,



{
"title": "Contributors",
"url": "contributors.html",
"summary": ""
}
,



{
"title": "convert (Python)",
"url": "convert.html",
"summary": ""
}
,



{
"title": "cross_spectrum (Python)",
"url": "cross_spectrum.html",
"summary": ""
}
,



{
"title": "Curve2Mask (Fortran)",
"url": "curve2mask.html",
"summary": ""
}
,



{
"title": "DHaj (Fortran)",
"url": "dhaj.html",
"summary": ""
}
,



{
"title": "djpi2 (Fortran)",
"url": "djpi2.html",
"summary": ""
}
,



{
"title": "DownContFilterMA (Fortran)",
"url": "downcontfilterma.html",
"summary": ""
}
,



{
"title": "DownContFilterMC (Fortran)",
"url": "downcontfiltermc.html",
"summary": ""
}
,



{
"title": "EigValSym (Fortran)",
"url": "eigvalsym.html",
"summary": ""
}
,



{
"title": "EigValVecSym (Fortran)",
"url": "eigvalvecsym.html",
"summary": ""
}
,



{
"title": "EigValVecSymTri (Fortran)",
"url": "eigvalvecsymtri.html",
"summary": ""
}
,



{
"title": "Frequently asked questions",
"url": "faq.html",
"summary": ""
}
,





{
"title": "figstyle",
"url": "figstyle.html",
"summary": ""
}
,



{
"title": "Fortran 95 problems",
"url": "fortran-95-problems.html",
"summary": ""
}
,



{
"title": "Fortran examples",
"url": "fortran-examples.html",
"summary": ""
}
,



{
"title": "Global spectral analysis",
"url": "global-spectral-analysis.html",
"summary": ""
}
,



{
"title": "GLQGridCoord (Fortran)",
"url": "glqgridcoord.html",
"summary": ""
}
,



{
"title": "Gravity and Magnetics routines",
"url": "gravity-magnetics.html",
"summary": ""
}
,



{
"title": "How to contribute",
"url": "how-to-contribute.html",
"summary": "SHTOOLS is an open source project whose success depends upon contributions from people like you. Even if you can not contribute code, you can report issues at GitHub and help us improve the documentation."
}
,



{
"title": "Implementation details",
"url": "implementation-details.html",
"summary": "The spherical harmonic transforms in SHTOOLS make use of integrations over longitude that involve fast Fourier transforms and integrations over latitude that utilize either Gauss-Legendre quadrature or exact quadrature rules for regularly spaced grids. The transforms and reconstructions are accurate to about degree 2800."
}
,



{
"title": "Spherical Harmonic Tools",
"url": "index.html",
"summary": "SHTOOLS/pyshtools is an archive of Fortran 95 and Python software that can be used to perform spherical harmonic transforms, multitaper spectral analyses on the sphere, expansions of functions into Slepian bases, and standard operations on global gravitational and magnetic field data."
}
,



{
"title": "Installing SHTOOLS",
"url": "installing.html",
"summary": "SHTOOLS and pyshtools can be installed in several ways. If you will be using only the Python components, you should use the pip package manager. If you will be writing and compiling Fortran 95 code, you should either compile manually using the Makefile or use the brew package manager (on macOS)."
}
,



{
"title": "Spherical harmonic I/O, storage, and conversions",
"url": "io.html",
"summary": ""
}
,



{
"title": "Legendre functions",
"url": "legendre-functions.html",
"summary": ""
}
,



{
"title": "License",
"url": "license.html",
"summary": "SHTOOLS is open source software and can be distributed in accordance with the 3-clause BSD license."
}
,



{
"title": "Localized spectral analysis",
"url": "localized-spectral-analysis.html",
"summary": ""
}
,



{
"title": "spectrum (Python)",
"url": "mag_spectrum.html",
"summary": ""
}
,



{
"title": "MakeCircleCoord (Fortran)",
"url": "makecirclecoord.html",
"summary": ""
}
,



{
"title": "MakeEllipseCoord (Fortran)",
"url": "makeellipsecoord.html",
"summary": ""
}
,



{
"title": "MakeGeoidGrid (Fortran)",
"url": "makegeoidgrid.html",
"summary": ""
}
,



{
"title": "MakeGravGradGridDH (Fortran)",
"url": "makegravgradgriddh.html",
"summary": ""
}
,



{
"title": "MakeGravGridDH (Fortran)",
"url": "makegravgriddh.html",
"summary": ""
}
,



{
"title": "MakeGrid2D (Fortran)",
"url": "makegrid2d.html",
"summary": ""
}
,



{
"title": "MakeGridDH (Fortran)",
"url": "makegriddh.html",
"summary": ""
}
,



{
"title": "MakeGridDHC (Fortran)",
"url": "makegriddhc.html",
"summary": ""
}
,



{
"title": "MakeGridGLQ (Fortran)",
"url": "makegridglq.html",
"summary": ""
}
,



{
"title": "MakeGridGLQC (Fortran)",
"url": "makegridglqc.html",
"summary": ""
}
,



{
"title": "MakeGridPoint (Fortran)",
"url": "makegridpoint.html",
"summary": ""
}
,



{
"title": "MakeGridPointC (Fortran)",
"url": "makegridpointc.html",
"summary": ""
}
,



{
"title": "MakeMagGradGridDH (Fortran)",
"url": "makemaggradgriddh.html",
"summary": ""
}
,



{
"title": "MakeMagGridDH (Fortran)",
"url": "makemaggriddh.html",
"summary": ""
}
,



{
"title": "Miscellaneous routines",
"url": "miscellaneous-routines.html",
"summary": ""
}
,



{
"title": "Modules",
"url": "f95-modules.html",
"summary": ""
}
,



{
"title": "NormalGravity (Fortran)",
"url": "normalgravity.html",
"summary": ""
}
,



{
"title": "PlanetsConstants",
"url": "planets-constants.html",
"summary": ""
}
,



{
"title": "PlBar (Fortran)",
"url": "plbar.html",
"summary": ""
}
,



{
"title": "PlBar_d1 (Fortran)",
"url": "plbar_d1.html",
"summary": ""
}
,



{
"title": "PLegendre (Fortran)",
"url": "plegendre.html",
"summary": ""
}
,



{
"title": "PLegendre_d1 (Fortran)",
"url": "plegendre_d1.html",
"summary": ""
}
,



{
"title": "PLegendreA (Fortran)",
"url": "plegendrea.html",
"summary": ""
}
,



{
"title": "PLegendreA_d1 (Fortran)",
"url": "plegendrea_d1.html",
"summary": ""
}
,



{
"title": "PlmBar (Fortran)",
"url": "plmbar.html",
"summary": ""
}
,



{
"title": "PlmBar_d1 (Fortran)",
"url": "plmbar_d1.html",
"summary": ""
}
,



{
"title": "PlmIndex (Fortran)",
"url": "plmindex.html",
"summary": ""
}
,



{
"title": "PlmON (Fortran)",
"url": "plmon.html",
"summary": ""
}
,



{
"title": "PlmON_d1 (Fortran)",
"url": "plmon_d1.html",
"summary": ""
}
,



{
"title": "PlmSchmidt (Fortran)",
"url": "plmschmidt.html",
"summary": ""
}
,



{
"title": "PlmSchmidt_d1 (Fortran)",
"url": "plmschmidt_d1.html",
"summary": ""
}
,



{
"title": "PlON (Fortran)",
"url": "plon.html",
"summary": ""
}
,



{
"title": "PlON_d1 (Fortran)",
"url": "plon_d1.html",
"summary": ""
}
,



{
"title": "PlSchmidt (Fortran)",
"url": "plschmidt.html",
"summary": ""
}
,



{
"title": "PlSchmidt_d1 (Fortran)",
"url": "plschmidt_d1.html",
"summary": ""
}
,



{
"title": "PreGLQ (Fortran)",
"url": "preglq.html",
"summary": ""
}
,





{
"title": "BAtoHilmDH (Python)",
"url": "pybatohilmdh.html",
"summary": ""
}
,



{
"title": "BAtoHilmRhoHDH (Python)",
"url": "pybatohilmrhohdh.html",
"summary": ""
}
,



{
"title": "CilmMinusDH (Python)",
"url": "pycilmminusdh.html",
"summary": ""
}
,



{
"title": "CilmMinusRhoHDH (Python)",
"url": "pycilmminusrhohdh.html",
"summary": ""
}
,



{
"title": "CilmPlusDH (Python)",
"url": "pycilmplusdh.html",
"summary": ""
}
,



{
"title": "CilmPlusRhoHDH (Python)",
"url": "pycilmplusrhohdh.html",
"summary": ""
}
,



{
"title": "ComputeDG82 (Python)",
"url": "pycomputedg82.html",
"summary": ""
}
,



{
"title": "ComputeDM (Python)",
"url": "pycomputedm.html",
"summary": ""
}
,



{
"title": "ComputeDMap (Python)",
"url": "pycomputedmap.html",
"summary": ""
}
,



{
"title": "Curve2Mask (Python)",
"url": "pycurve2mask.html",
"summary": ""
}
,



{
"title": "DHaj (Python)",
"url": "pydhaj.html",
"summary": ""
}
,



{
"title": "djpi2 (Python)",
"url": "pydjpi2.html",
"summary": ""
}
,



{
"title": "DownContFilterMA (Python)",
"url": "pydowncontfilterma.html",
"summary": ""
}
,



{
"title": "DownContFilterMC (Python)",
"url": "pydowncontfiltermc.html",
"summary": ""
}
,



{
"title": "GLQGridCoord (Python)",
"url": "pyglqgridcoord.html",
"summary": ""
}
,



{
"title": "legendre (Python)",
"url": "pylegendre.html",
"summary": ""
}
,



{
"title": "legendre_lm (Python)",
"url": "pylegendre_lm.html",
"summary": ""
}
,



{
"title": "MakeCircleCoord (Python)",
"url": "pymakecirclecoord.html",
"summary": ""
}
,



{
"title": "MakeEllipseCoord (Python)",
"url": "pymakeellipsecoord.html",
"summary": ""
}
,



{
"title": "MakeGeoidGridDH (Python)",
"url": "pymakegeoidgriddh.html",
"summary": ""
}
,



{
"title": "MakeGravGradGridDH (Python)",
"url": "pymakegravgradgriddh.html",
"summary": ""
}
,



{
"title": "MakeGravGridDH (Python)",
"url": "pymakegravgriddh.html",
"summary": ""
}
,



{
"title": "MakeGrid2D (Python)",
"url": "pymakegrid2d.html",
"summary": ""
}
,



{
"title": "MakeGridDH (Python)",
"url": "pymakegriddh.html",
"summary": ""
}
,



{
"title": "MakeGridDHC (Python)",
"url": "pymakegriddhc.html",
"summary": ""
}
,



{
"title": "MakeGridGLQ (Python)",
"url": "pymakegridglq.html",
"summary": ""
}
,



{
"title": "MakeGridGLQC (Python)",
"url": "pymakegridglqc.html",
"summary": ""
}
,



{
"title": "MakeGridPoint (Python)",
"url": "pymakegridpoint.html",
"summary": ""
}
,



{
"title": "MakeGridPointC (Python)",
"url": "pymakegridpointc.html",
"summary": ""
}
,



{
"title": "MakeMagGradGridDH (Python)",
"url": "pymakemaggradgriddh.html",
"summary": ""
}
,



{
"title": "MakeMagGridDH (Python)",
"url": "pymakemaggriddh.html",
"summary": ""
}
,



{
"title": "NormalGravity (Python)",
"url": "pynormalgravity.html",
"summary": ""
}
,



{
"title": "PlBar (Python)",
"url": "pyplbar.html",
"summary": ""
}
,



{
"title": "PlBar_d1 (Python)",
"url": "pyplbar_d1.html",
"summary": ""
}
,



{
"title": "PLegendre (Python)",
"url": "pyplegendre.html",
"summary": ""
}
,



{
"title": "PLegendre_d1 (Python)",
"url": "pyplegendre_d1.html",
"summary": ""
}
,



{
"title": "PLegendreA (Python)",
"url": "pyplegendrea.html",
"summary": ""
}
,



{
"title": "PLegendreA_d1 (Python)",
"url": "pyplegendrea_d1.html",
"summary": ""
}
,



{
"title": "PlmBar (Python)",
"url": "pyplmbar.html",
"summary": ""
}
,



{
"title": "PlmBar_d1 (Python)",
"url": "pyplmbar_d1.html",
"summary": ""
}
,



{
"title": "PlmIndex (Python)",
"url": "pyplmindex.html",
"summary": ""
}
,



{
"title": "PlmON (Python)",
"url": "pyplmon.html",
"summary": ""
}
,



{
"title": "PlmON_d1 (Python)",
"url": "pyplmon_d1.html",
"summary": ""
}
,



{
"title": "PlmSchmidt (Python)",
"url": "pyplmschmidt.html",
"summary": ""
}
,



{
"title": "PlmSchmidt_d1 (Python)",
"url": "pyplmschmidt_d1.html",
"summary": ""
}
,



{
"title": "PlON (Python)",
"url": "pyplon.html",
"summary": ""
}
,



{
"title": "PlON_d1 (Python)",
"url": "pyplon_d1.html",
"summary": ""
}
,



{
"title": "PlSchmidt (Python)",
"url": "pyplschmidt.html",
"summary": ""
}
,



{
"title": "PlSchmidt_d1 (Python)",
"url": "pyplschmidt_d1.html",
"summary": ""
}
,



{
"title": "SHAdmitCorr (Python)",
"url": "pyshadmitcorr.html",
"summary": ""
}
,



{
"title": "SHBias (Python)",
"url": "pyshbias.html",
"summary": ""
}
,



{
"title": "SHBiasAdmitCorr (Python)",
"url": "pyshbiasadmitcorr.html",
"summary": ""
}
,



{
"title": "SHBiasK (Python)",
"url": "pyshbiask.html",
"summary": ""
}
,



{
"title": "SHBiasKMask (Python)",
"url": "pyshbiaskmask.html",
"summary": ""
}
,



{
"title": "SHCilmToCindex (Python)",
"url": "pyshcilmtocindex.html",
"summary": ""
}
,



{
"title": "SHCilmToVector (Python)",
"url": "pyshcilmtovector.html",
"summary": ""
}
,



{
"title": "SHCindexToCilm (Python)",
"url": "pyshcindextocilm.html",
"summary": ""
}
,



{
"title": "SHConfidence (Python)",
"url": "pyshconfidence.html",
"summary": ""
}
,



{
"title": "SHctor (Python)",
"url": "pyshctor.html",
"summary": ""
}
,



{
"title": "SHExpandDH (Python)",
"url": "pyshexpanddh.html",
"summary": ""
}
,



{
"title": "SHExpandDHC (Python)",
"url": "pyshexpanddhc.html",
"summary": ""
}
,



{
"title": "SHExpandGLQ (Python)",
"url": "pyshexpandglq.html",
"summary": ""
}
,



{
"title": "SHExpandGLQC (Python)",
"url": "pyshexpandglqc.html",
"summary": ""
}
,



{
"title": "SHExpandLSQ (Python)",
"url": "pyshexpandlsq.html",
"summary": ""
}
,



{
"title": "SHExpandWLSQ (Python)",
"url": "pyshexpandwlsq.html",
"summary": ""
}
,



{
"title": "SHFindLWin (Python)",
"url": "pyshfindlwin.html",
"summary": ""
}
,



{
"title": "SHGLQ (Python)",
"url": "pyshglq.html",
"summary": ""
}
,



{
"title": "SHLocalizedAdmitCorr (Python)",
"url": "pyshlocalizedadmitcorr.html",
"summary": ""
}
,



{
"title": "SHMTCouplingMatrix (Python)",
"url": "pyshmtcouplingmatrix.html",
"summary": ""
}
,



{
"title": "SHMTDebias (Python)",
"url": "pyshmtdebias.html",
"summary": ""
}
,



{
"title": "SHMTVar (Python)",
"url": "pyshmtvar.html",
"summary": ""
}
,



{
"title": "SHMTVarOpt (Python)",
"url": "pyshmtvaropt.html",
"summary": ""
}
,



{
"title": "SHMultiply (Python)",
"url": "pyshmultiply.html",
"summary": ""
}
,



{
"title": "SHMultiTaperCSE (Python)",
"url": "pyshmultitapercse.html",
"summary": ""
}
,



{
"title": "SHMultiTaperMaskCSE (Python)",
"url": "pyshmultitapermaskcse.html",
"summary": ""
}
,



{
"title": "SHMultiTaperMaskSE (Python)",
"url": "pyshmultitapermaskse.html",
"summary": ""
}
,



{
"title": "SHMultiTaperSE (Python)",
"url": "pyshmultitaperse.html",
"summary": ""
}
,



{
"title": "shread (Python)",
"url": "pyshread.html",
"summary": ""
}
,



{
"title": "SHRead2 (Python)",
"url": "pyshread2.html",
"summary": ""
}
,



{
"title": "SHRead2Error (Python)",
"url": "pyshread2error.html",
"summary": ""
}
,



{
"title": "SHReadError (Python)",
"url": "pyshreaderror.html",
"summary": ""
}
,



{
"title": "SHReadErrorH (Python)",
"url": "pyshreaderrorh.html",
"summary": ""
}
,



{
"title": "SHReadH (Python)",
"url": "pyshreadh.html",
"summary": ""
}
,



{
"title": "SHReadJPL (Python)",
"url": "pyshreadjpl.html",
"summary": ""
}
,



{
"title": "SHReadJPLError (Python)",
"url": "pyshreadjplerror.html",
"summary": ""
}
,



{
"title": "SHReturnTapers (Python)",
"url": "pyshreturntapers.html",
"summary": ""
}
,



{
"title": "SHReturnTapersM (Python)",
"url": "pyshreturntapersm.html",
"summary": ""
}
,



{
"title": "SHReturnTapersMap (Python)",
"url": "pyshreturntapersmap.html",
"summary": ""
}
,



{
"title": "SHRotateCoef (Python)",
"url": "pyshrotatecoef.html",
"summary": ""
}
,



{
"title": "SHRotateRealCoef (Python)",
"url": "pyshrotaterealcoef.html",
"summary": ""
}
,



{
"title": "SHRotateTapers (Python)",
"url": "pyshrotatetapers.html",
"summary": ""
}
,



{
"title": "SHrtoc (Python)",
"url": "pyshrtoc.html",
"summary": ""
}
,



{
"title": "SHSCouplingMatrix (Python)",
"url": "pyshscouplingmatrix.html",
"summary": ""
}
,



{
"title": "SHSCouplingMatrixCap (Python)",
"url": "pyshscouplingmatrixcap.html",
"summary": ""
}
,



{
"title": "SHSjkPG (Python)",
"url": "pyshsjkpg.html",
"summary": ""
}
,



{
"title": "SHSlepianVar (Python)",
"url": "pyshslepianvar.html",
"summary": ""
}
,



{
"title": "SHVectorToCilm (Python)",
"url": "pyshvectortocilm.html",
"summary": ""
}
,



{
"title": "SlepianCoeffs (Python)",
"url": "pyslepiancoeffs.html",
"summary": ""
}
,



{
"title": "SlepianCoeffsToSH (Python)",
"url": "pyslepiancoeffstosh.html",
"summary": ""
}
,



{
"title": "spharm (Python)",
"url": "pyspharm.html",
"summary": ""
}
,



{
"title": "spharm_lm_ (Python)",
"url": "pyspharm_lm.html",
"summary": ""
}
,



{
"title": "SphericalCapCoef (Python)",
"url": "pysphericalcapcoef.html",
"summary": ""
}
,



{
"title": "Python classes",
"url": "python-classes.html",
"summary": ""
}
,



{
"title": "Constants",
"url": "python-constants.html",
"summary": ""
}
,



{
"title": "Python examples",
"url": "python-examples.html",
"summary": ""
}
,



{
"title": "Gravity and magnetics routines",
"url": "python-gravity-magnetics.html",
"summary": ""
}
,



{
"title": "Spherical harmonic I/O, storage, and conversions",
"url": "python-io.html",
"summary": ""
}
,



{
"title": "Legendre functions",
"url": "python-legendre-functions.html",
"summary": ""
}
,



{
"title": "SHCoeffs class",
"url": "python-shcoeffs.html",
"summary": ""
}
,



{
"title": "SHGeoid class",
"url": "python-shgeoid.html",
"summary": ""
}
,



{
"title": "SHMagCoeffs class",
"url": "python-shmagcoeffs.html",
"summary": ""
}
,



{
"title": "SHGravGrid class",
"url": "python-shgravgrid.html",
"summary": ""
}
,



{
"title": "SHGrid class",
"url": "python-shgrid.html",
"summary": ""
}
,



{
"title": "SHGravCoeffs class",
"url": "python-shgravcoeffs.html",
"summary": ""
}
,



{
"title": "SHMagGrid class",
"url": "python-shmaggrid.html",
"summary": ""
}
,



{
"title": "SHTensor class",
"url": "python-shtensor.html",
"summary": ""
}
,



{
"title": "SHWindow class",
"url": "python-shwindow.html",
"summary": ""
}
,



{
"title": "Slepian class",
"url": "python-slepian.html",
"summary": ""
}
,



{
"title": "SlepianCoeffs class",
"url": "python-slepiancoeffs.html",
"summary": ""
}
,



{
"title": "Global and localized spectral analysis",
"url": "python-spectral-analysis.html",
"summary": ""
}
,



{
"title": "Spherical harmonic rotations",
"url": "python-spherical-harmonic-rotations.html",
"summary": ""
}
,



{
"title": "Spherical harmonic transforms",
"url": "python-spherical-harmonic-transforms.html",
"summary": ""
}
,



{
"title": "SHTOOLS utilities",
"url": "python-utilities.html",
"summary": ""
}
,



{
"title": "Wigner3j (Python)",
"url": "pywigner3j.html",
"summary": ""
}
,



{
"title": "YilmIndexVector (Python)",
"url": "pyyilmindexvector.html",
"summary": ""
}
,



{
"title": "RandomGaussian (Fortran)",
"url": "randomgaussian.html",
"summary": ""
}
,



{
"title": "RandomN (Fortran)",
"url": "randomn.html",
"summary": ""
}
,



{
"title": "read_icgem_gfc (Python)",
"url": "read_icgem_gfc.html",
"summary": ""
}
,



{
"title": "Real spherical harmonics",
"url": "real-spherical-harmonics.html",
"summary": "SHTOOLS uses by default 4&pi;-normalized spherical harmonic functions that exclude the Condon-Shortley phase factor. Schmidt semi-normalized, orthonormalized, and unnormalized harmonics can be employed in most routines by specifying optional parameters."
}
,



{
"title": "SHTOOLS release notes: Version 3",
"url": "release-notes-v3.html",
"summary": ""
}
,



{
"title": "SHTOOLS release notes: Version 4",
"url": "release-notes-v4.html",
"summary": ""
}
,





{
"title": "SHAdmitCorr (Fortran)",
"url": "shadmitcorr.html",
"summary": ""
}
,



{
"title": "SHBias (Fortran)",
"url": "shbias.html",
"summary": ""
}
,



{
"title": "SHBiasAdmitCorr (Fortran)",
"url": "shbiasadmitcorr.html",
"summary": ""
}
,



{
"title": "SHBiasK (Fortran)",
"url": "shbiask.html",
"summary": ""
}
,



{
"title": "SHBiasKMask (Fortran)",
"url": "shbiaskmask.html",
"summary": ""
}
,



{
"title": "SHCilmToCindex (Fortran)",
"url": "shcilmtocindex.html",
"summary": ""
}
,



{
"title": "SHCilmToVector (Fortran)",
"url": "shcilmtovector.html",
"summary": ""
}
,



{
"title": "SHCindexToCilm (Fortran)",
"url": "shcindextocilm.html",
"summary": ""
}
,



{
"title": "SHConfidence (Fortran)",
"url": "shconfidence.html",
"summary": ""
}
,



{
"title": "SHCrossPowerDensityL (Fortran)",
"url": "shcrosspowerdensityl.html",
"summary": ""
}
,



{
"title": "SHCrossPowerDensityLC (Fortran)",
"url": "shcrosspowerdensitylc.html",
"summary": ""
}
,



{
"title": "SHCrossPowerL (Fortran)",
"url": "shcrosspowerl.html",
"summary": ""
}
,



{
"title": "SHCrossPowerLC (Fortran)",
"url": "shcrosspowerlc.html",
"summary": ""
}
,



{
"title": "SHCrossPowerSpectrum (Fortran)",
"url": "shcrosspowerspectrum.html",
"summary": ""
}
,



{
"title": "SHCrossPowerSpectrumC (Fortran)",
"url": "shcrosspowerspectrumc.html",
"summary": ""
}
,



{
"title": "SHCrossPowerSpectrumDensity (Fortran)",
"url": "shcrosspowerspectrumdensity.html",
"summary": ""
}
,



{
"title": "SHCrossPowerSpectrumDensityC (Fortran)",
"url": "shcrosspowerspectrumdensityc.html",
"summary": ""
}
,



{
"title": "SHctor (Fortran)",
"url": "shctor.html",
"summary": ""
}
,



{
"title": "SHExpandDH (Fortran)",
"url": "shexpanddh.html",
"summary": ""
}
,



{
"title": "SHExpandDHC (Fortran)",
"url": "shexpanddhc.html",
"summary": ""
}
,



{
"title": "SHExpandGLQ (Fortran)",
"url": "shexpandglq.html",
"summary": ""
}
,



{
"title": "SHExpandGLQC (Fortran)",
"url": "shexpandglqc.html",
"summary": ""
}
,



{
"title": "SHExpandLSQ (Fortran)",
"url": "shexpandlsq.html",
"summary": ""
}
,



{
"title": "SHFindLWin (Fortran)",
"url": "shfindlwin.html",
"summary": ""
}
,



{
"title": "SHGLQ (Fortran)",
"url": "shglq.html",
"summary": ""
}
,



{
"title": "SHLocalizedAdmitCorr (Fortran)",
"url": "shlocalizedadmitcorr.html",
"summary": ""
}
,



{
"title": "SHMagPowerL (Fortran)",
"url": "shmagpowerl.html",
"summary": ""
}
,



{
"title": "SHMagPowerSpectrum (Fortran)",
"url": "shmagpowerspectrum.html",
"summary": ""
}
,



{
"title": "SHMTCouplingMatrix (Fortran)",
"url": "shmtcouplingmatrix.html",
"summary": ""
}
,



{
"title": "SHMTDebias (Fortran)",
"url": "shmtdebias.html",
"summary": ""
}
,



{
"title": "SHMTVar (Fortran)",
"url": "shmtvar.html",
"summary": ""
}
,



{
"title": "SHMTVarOpt (Fortran)",
"url": "shmtvaropt.html",
"summary": ""
}
,



{
"title": "SHMultiply (Fortran)",
"url": "shmultiply.html",
"summary": ""
}
,



{
"title": "SHMultiTaperCSE (Fortran)",
"url": "shmultitapercse.html",
"summary": ""
}
,



{
"title": "SHMultiTaperMaskCSE (Fortran)",
"url": "shmultitapermaskcse.html",
"summary": ""
}
,



{
"title": "SHMultiTaperMaskSE (Fortran)",
"url": "shmultitapermaskse.html",
"summary": ""
}
,



{
"title": "SHMultiTaperSE (Fortran)",
"url": "shmultitaperse.html",
"summary": ""
}
,



{
"title": "SHPowerDensityL (Fortran)",
"url": "shpowerdensityl.html",
"summary": ""
}
,



{
"title": "SHPowerDensityLC (Fortran)",
"url": "shpowerdensitylc.html",
"summary": ""
}
,



{
"title": "SHPowerL (Fortran)",
"url": "shpowerl.html",
"summary": ""
}
,



{
"title": "SHPowerLC (Fortran)",
"url": "shpowerlc.html",
"summary": ""
}
,



{
"title": "SHPowerSpectrum (Fortran)",
"url": "shpowerspectrum.html",
"summary": ""
}
,



{
"title": "SHPowerSpectrumC (Fortran)",
"url": "shpowerspectrumc.html",
"summary": ""
}
,



{
"title": "SHPowerSpectrumDensity (Fortran)",
"url": "shpowerspectrumdensity.html",
"summary": ""
}
,



{
"title": "SHPowerSpectrumDensityC (Fortran)",
"url": "shpowerspectrumdensityc.html",
"summary": ""
}
,



{
"title": "SHRead (Fortran)",
"url": "shread.html",
"summary": ""
}
,



{
"title": "SHRead2 (Fortran)",
"url": "shread2.html",
"summary": ""
}
,



{
"title": "SHReadJPL (Fortran)",
"url": "shreadjpl.html",
"summary": ""
}
,



{
"title": "SHReturnTapers (Fortran)",
"url": "shreturntapers.html",
"summary": ""
}
,



{
"title": "SHReturnTapersM (Fortran)",
"url": "shreturntapersm.html",
"summary": ""
}
,



{
"title": "SHReturnTapersMap (Fortran)",
"url": "shreturntapersmap.html",
"summary": ""
}
,



{
"title": "SHRotateCoef (Fortran)",
"url": "shrotatecoef.html",
"summary": ""
}
,



{
"title": "SHRotateRealCoef (Fortran)",
"url": "shrotaterealcoef.html",
"summary": ""
}
,



{
"title": "SHRotateTapers (Fortran)",
"url": "shrotatetapers.html",
"summary": ""
}
,



{
"title": "SHrtoc (Fortran)",
"url": "shrtoc.html",
"summary": ""
}
,



{
"title": "SHSCouplingMatrix (Fortran)",
"url": "shscouplingmatrix.html",
"summary": ""
}
,



{
"title": "SHSCouplingMatrixCap (Fortran)",
"url": "shscouplingmatrixcap.html",
"summary": ""
}
,



{
"title": "SHSjkPG (Fortran)",
"url": "shsjkpg.html",
"summary": ""
}
,



{
"title": "SHSlepianVar (Fortran)",
"url": "shslepianvar.html",
"summary": ""
}
,



{
"title": "SHTOOLS (Fortran)",
"url": "shtools.html",
"summary": ""
}
,



{
"title": "SHVectorToCilm (Fortran)",
"url": "shvectortocilm.html",
"summary": ""
}
,





{
"title": "SlepianCoeffs (Fortran)",
"url": "slepiancoeffs.html",
"summary": ""
}
,



{
"title": "SlepianCoeffsToSH (Fortran)",
"url": "slepiancoeffstosh.html",
"summary": ""
}
,



{
"title": "spectrum (Python)",
"url": "spectrum.html",
"summary": ""
}
,



{
"title": "Spherical harmonic rotations",
"url": "spherical-harmonic-rotations.html",
"summary": ""
}
,



{
"title": "Spherical harmonic transforms",
"url": "spherical-harmonic-transforms.html",
"summary": ""
}
,



{
"title": "SphericalCapCoef (Fortran)",
"url": "sphericalcapcoef.html",
"summary": ""
}
,











{
"title": "Using SHTOOLS with Fortran 95",
"url": "using-with-f95.html",
"summary": "SHTOOLS subroutines and functions can be accessed easily from any Fortran 95 program. It is only necessary to use the SHTOOLS module and link to the compiled archive."
}
,



{
"title": "Using SHTOOLS in Python",
"url": "using-with-python.html",
"summary": "To use SHTOOLS in Python, it is only necessary to import the pyshtools module."
}
,



{
"title": "Wigner3j (Fortran)",
"url": "wigner3j.html",
"summary": ""
}
,



{
"title": "YilmIndexVector (Fortran)",
"url": "yilmindexvector.html",
"summary": ""
}






]
